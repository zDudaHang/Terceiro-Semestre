--> r0 = $s0, r1 = $s1, r2 = $s2

2.34 a)

	  MOV r0, 10 # init loop counter to 10
LOOP: ADD r0, r1 # add r1 t0 r0
	  SUBS r0, 1 # decrement counter
	  BNE LOOP # if Z = 0 repeat loop

MIPS :

	  addi $s0, $0, 10
LOOP: add $s0, $s1, $0
	  addi $s0, $s0, -1
	  bne $s0, $0, LOOP


2.34 b)

ROR r1, r2, 4 # r1 = r2[3:0] || r2[31:4]

MIPS :
andi $t0, $s2, 0xF
sll $t0, $t0, 28
srl $t1, $s2, 4
or $s1, $t0, $t1