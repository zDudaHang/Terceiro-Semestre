2.21.a)

main() {
	leaf_function(1);
}

int leaf_function(int f) {
	int result;
	result = f + 1;
	if (f > 5) {
		return result;
	} else {
		leaf_function(result);
	}
}

.text
.globl MAIN	
MAIN:   addi $sp, $sp, -4
		sw $ra, 0 ($sp)
		addi $a0, $0, 1
		jal LEAF_FUNCTION
		lw $ra, 0 ($sp)
		addi $sp, $sp, 4
		jr $ra

LEAF_FUNCTION:	addi $sp, $sp, -4
				sw $ra, 0 ($sp)
				addi $s0, $a0, 1 # result = f + 1
				addi $s1, $0, 5
				slt $s2, $s1, $a0 # $s2 = 1 <=> 5 < f || $s2 = 0 <=> 5 >= f
				beq $s2, $0, L1
				addi $v0, $s0, $0
				j DONE
L1:				add $a0, $s0, $0
				jal LEAF_FUNCTION
DONE:			lw $ra, 0($sp)
				addi $sp, $sp, 4
				jr $ra

------------------------------------------------------- // -------------------------------------------------------

2.21.b)

int my_global = 100;
main () {
	int x = 10;
	int y = 20;
	int z;
	z = my_function(x, my_global);
}

int my_function(int x, int y) {
	return x - y;
}

.data
my_global: .word: 100

.text
.globl MAIN
MAIN:	addi $sp, $sp, -4
		sw $ra, 0 ($sp)
		addi $s0, $0, 10 # x
		addi $s1, $0, 20 # y
		add $s2, $0, $0 # z
		add $a0, $s0, $0
		la $s3, my_global
		add $a1, $s3, $0
		jal my_function
		add $s2, $v0, $0
		lw $ra, 0 ($sp)
		addi $sp, $sp, 4
		jr $ra

MY_FUNCTION: sub $v0, $a0, $a1
			 jr $ra 